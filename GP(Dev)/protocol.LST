C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE PROTOCOL
OBJECT MODULE PLACED IN protocol.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE protocol.c BROWSE MOD167 DEBUG TABS(2) 

 stmt lvl     source

    1         #include "protocol.h"
    2         #include "can.h"
    3         #include "settings.h"
    4         #include "process.h"
    5         #include "system.h"
    6         #include "debug.h"
    7         
    8         uint16  timeSpan;     //–≤—Ä–µ–º—è –∏–∑–º–µ—Ä–µ–Ω–∏—è (–≤ –¥–µ—Å—è—Ç—ã—Ö –¥–æ–ª—è—Ö —Å–µ–∫)
    9         uint8   rangeValue;   //–Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (0 - –∞–≤—Ç–æ)
   10         
   11         const uint8 mResetResponse[] = {0x42};
   12         const uint8 mErrorResponse[] = {0x90};
   13         
   14         //–∫–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –ø–µ—Ä–≤—ã–π –±–∞–π—Ç - –Ω–æ–º–µ—Ä –¥–∏–∞–ø–∞–∑–æ–
             -Ω–∞, –≤—Ç–æ—Ä–æ–π –±–∞–π—Ç - —Å—Ç–∞—Ç—É—Å(–≤–∫–ª—é—á–∏—Ç—å - –≤—ã–∫–ª—é—á–∏—Ç—å)
   15         const uint8 mStartRangeAuto2[]  = {0x02,0x01,0x01};
   16         const uint8 mStartRangeAuto3[]  = {0x03,0x01,0x01};
   17         
   18         const uint8 mStartRangeManual2[]  = {0x02,0x01,0x00};
   19         const uint8 mStartRangeManual3[]  = {0x03,0x01,0x00};
   20         
   21         
   22         const uint8 mStopRange2[] = {0x02,0x00};
   23         const uint8 mStopRange3[] = {0x03,0x00};
   24         
   25         
   26         
   27         static uint8  dataMsgCounter = 0;
   28         
   29         
   30         
   31         void Protocol_Initialization()
   32         {
   33  1        rangeValue = 0;
   34  1        timeSpan = 10;
   35  1        
   36  1      }
   37         
   38         void Protocol_SetRangeValue(uint8 Value)
   39         {
   40  1        rangeValue = Value;
   41  1      }
   42         
   43         uint8 Protocol_GetRangeValue()
   44         {
   45  1        return rangeValue;
   46  1      }
   47         
   48         void Protocol_TransmitMsgCallback(uint16  canID)
   49         {
   50  1        
   51  1      }
*** WARNING C47 IN LINE 48 OF protocol.c: 'canID': unreferenced parameter
   52         //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
   53         void Protocol_SendDataMsg(uint8*  pData,uint8 *pValue,uint8 dataSize)
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 2   

   54         {
   55  1        uint8 pIndex = pData[1];
   56  1        
   57  1          memcpy(pData + 4,(uint32*)(pValue),dataSize);
   58  1        
   59  1        pData[1] = pIndex;
   60  1        pData[2] = 0;
   61  1        
   62  1        CAN_SendMessage(TX_CMD,pData,8);
   63  1      }
   64         //–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ—Ç –ü–û
   65         void Protocol_GetDataMsg(uint8* pValue, uint8 *pData,uint8  dataSize,eSaveSate saveState)
   66         {
   67  1        memcpy(pValue,pData + 4,dataSize);
   68  1          if(saveState == E_SAVE_STATE)SETTINGS_Save();
   69  1        
   70  1        Protocol_SendDataMsg(pData,(uint8*)pValue,dataSize);
   71  1      }
   72         //–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   73         void Protocol_ResponseDataPackaje(eResponseState responseState)
   74         {
   75  1        uint8 pData[2];
   76  1              pData[0] = 0x40;
   77  1              pData[1] = (uint8)responseState;
   78  1        
   79  1          CAN_SendMessage(TX_DATA,pData,sizeof(pData));
   80  1      }
   81         //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö
   82         void Protocol_ConfirmStopData()
   83         {
   84  1        uint8 pData[2];
   85  1          pData[0] = 0x41;
   86  1          pData[1] = 0;
   87  1        
   88  1        CAN_SendMessage(TX_DATA,pData,sizeof(pData));
   89  1      }
   90         void Protocol_StartMsg()
   91         {
   92  1        CAN_SendMessage(TX_RESPONSE,mResetResponse,1);
   93  1      }
   94         
   95         //–ó–∞–≥–æ–ª–æ–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
   96         void Protocol_HeaderDataMsg(uint16 counterRate,float averageDose)
   97         { 
   98  1        uint8 pData[8];
   99  1      
  100  1        dataMsgCounter = 0;
  101  1        memset(pData,0,sizeof(pData));
  102  1      
  103  1          pData[0] = 0x40;
  104  1          pData[1] = 0xFF;
  105  1          pData[2] = (uint8)(counterRate & 0x00FF);
  106  1          pData[3] = (uint8)(counterRate >> 8);
  107  1      
  108  1          memcpy(pData + 4,&averageDose,sizeof(float));
  109  1        
  110  1        CAN_SendMessage(TX_DATA,pData,sizeof(pData));
  111  1      }
  112         void Protocol_CountersMsg(uint16  *pData)
  113         {
  114  1        CAN_SendMessage(TX_DATA,(uint8*)pData,8);
  115  1      }
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 3   

  116         void Protocol_DoseRateMsg(float doseValue)
  117         {
  118  1        uint8 pData[8];
  119  1          
  120  1          memcpy(pData,&doseValue,sizeof(float));
  121  1          memset(pData + 4,(uint8)0xFF,sizeof(float));
  122  1        
  123  1        CAN_SendMessage(TX_DATA,pData,sizeof(pData));
  124  1      }
  125         
  126         
  127         void Protocol_ReceiveMsgCallback(uint16 canID, uint8 *pData)
  128         {
  129  1        switch(canID)
  130  1        {
  131  2            //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å–±—Ä–æ—Å–∞ –¥–ª—è –≤–µ–¥–æ–º–æ–π –ø–ª–∞—Ç—ã
  132  2          #ifndef MAIN_RANGE
                    case RX_CMD:
                    {
                      switch(pData[0])
                      {
                        case 0x42:  System_Reset(); break;
                      }
                    }break;
                  #endif
  141  2            //–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π
  142  2          #ifdef MAIN_RANGE 
  143  2            case RX_CMD:  
  144  2            {
  145  3              switch(pData[0])
  146  3              {
  147  4                case 0x40:
  148  4                {
  149  5                  //–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º
  150  5                  switch(pData[1])
  151  5                  {
  152  6                    case 0:
  153  6                    {
  154  7                      Process_SetAutoMode(AUTO_ON); //–≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ—Ä–µ–∂–∏–º –¥–ª—è 3 –¥–∏–∞–ø–∞–∑–æ–Ω–∞
  155  7                      Process_Start(); //–∑–∞–ø—É—Å–∫–∞–µ–º –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤ 3 –¥–∏–∞–ø–∞–∑–æ–Ω–µ
  156  7                      
  157  7                        CAN_SendMessage(TX_RESPONSE,pData,2);
  158  7                    }break;
  159  6                    
  160  6                    case 2:
  161  6                    {
  162  7                      Process_SetAutoMode(AUTO_OFF);  //–º–∞–Ω—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
  163  7                      CAN_SendMessage(TX_CHANGE_RANGE,mStartRangeManual2,3);
  164  7                      
  165  7                        CAN_SendMessage(TX_RESPONSE,pData,2);
  166  7                    }break;
  167  6                    
  168  6                    case 3:
  169  6                    {
  170  7                      Process_SetAutoMode(AUTO_OFF);  //–º–∞–Ω—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
  171  7                      Process_Start(); 
  172  7                      
  173  7                        CAN_SendMessage(TX_RESPONSE,pData,2);
  174  7                    }break;
  175  6                  }
  176  5                }break;
  177  4                
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 4   

  178  4                case 0x41:
  179  4                { 
  180  5              
  181  5                    CAN_SendMessage(TX_CHANGE_RANGE,mStopRange2,2);
  182  5                  Process_Stop(); 
  183  5                  CAN_SendMessage(TX_RESPONSE,pData,1);
  184  5                }break;
  185  4                
  186  4                
  187  4              }
  188  3            }break;
  189  2          #endif
  190  2            
  191  2          
  192  2            //–ø—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∏–¥ —Å–º–µ–Ω—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞
  193  2          case TX_CHANGE_RANGE:
  194  2          {
  195  3            switch(pData[0])
  196  3            {
  197  4              #ifdef MAIN_RANGE 
  198  4                case 3:
  199  4                {
  200  5                  //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–µ–∂–∏–º –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø—Ä–∏—ë–º–Ω–∏–∫–∞
  201  5                  if(pData[2] == 1)//–ø—Ä–∏–Ω—è—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∞–≤—Ç–æ—Ä–µ–∂–∏–º–∞
  202  5                    Process_SetAutoMode(AUTO_ON);
  203  5                  else
  204  5                    Process_SetAutoMode(AUTO_OFF);
  205  5                  
  206  5                  //–≤–∫–ª—é—á–∞–µ–º/–≤—ã–∫–ª—é—á–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–∏—ë–º–Ω–∏–∫
  207  5                  if(pData[1] == 1)
  208  5                    Process_Start();
  209  5                  else
  210  5                    Process_Stop();
  211  5                }break;
  212  4              #else
                        case 2:
                        {
                          //—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–µ–∂–∏–º –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø—Ä–∏—ë–º–Ω–∏–∫–∞
                          if(pData[2] == 1)//–ø—Ä–∏–Ω—è—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∞–≤—Ç–æ—Ä–µ–∂–∏–º–∞
                            Process_SetAutoMode(AUTO_ON);
                          else
                            Process_SetAutoMode(AUTO_OFF);
                          
                          //–≤–∫–ª—é—á–∞–µ–º/–≤—ã–∫–ª—é—á–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–∏—ë–º–Ω–∏–∫
                          
                          if(pData[1] == 1)
                            Process_Start();
                          else
                            Process_Stop();
                        }break;
                      #endif
  229  4            }
  230  3          }break;
  231  2            
  232  2          case RX_DATA: 
  233  2          {
  234  3            switch(pData[0])
  235  3            {
  236  4              
  237  4              case 0x04:  //–∑–∞–ø–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  238  4              {
  239  5                switch(pData[1])
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 5   

  240  5                {
  241  6                  case FACTORS:     Protocol_GetDataMsg((uint8*)&MainSettings.correctionFactors[pData[3]],pData,sizeof(f
             -loat),E_NO_SAVE_STATE); break;
  242  6                  case DEADTIME:    Protocol_GetDataMsg((uint8*)&MainSettings.mDeadTime,pData,sizeof(MainSettings.mDead
             -Time),E_NO_SAVE_STATE); break;
  243  6                  case EFFICIENCY:  Protocol_GetDataMsg((uint8*)&MainSettings.mEfficiency,pData,sizeof(MainSettings.mE
             -fficiency),E_NO_SAVE_STATE); break;
  244  6                  case SENSIVITY:   Protocol_GetDataMsg((uint8*)&MainSettings.mSensivity,pData,sizeof(MainSettings.mSen
             -sivity),E_NO_SAVE_STATE); break;
  245  6                  case RANGE:       Protocol_GetDataMsg((uint8*)&MainSettings.rangeLimits,pData,sizeof(MainSettings.range
             -Limits),E_NO_SAVE_STATE); break;
  246  6                  
  247  6                  
  248  6                  case SAVE_PARAMETRS:
  249  6                  {
  250  7                    if(pData[3] == 0xFF)
  251  7                      SETTINGS_Save();
  252  7                    if(pData[3] == 0x00){
  253  8                      SETTINGS_Default();
  254  8                      SETTINGS_Save();
  255  8                    }
  256  7                    CAN_SendMessage(TX_CMD,pData,8);
  257  7                  }break;
  258  6                  
  259  6                  case DEBUG_TRACE:
  260  6                  {
  261  7                    if(pData[3] == 0x00)
  262  7                      Debug_Stop();
  263  7                    if(pData[3] == 0x01)
  264  7                      Debug_Start();
  265  7                    
  266  7                  }break;
  267  6                  
  268  6                }
  269  5              }break;
  270  4              
  271  4              case 0x05:  //–∑–∞–ø—Ä–æ—Å
  272  4              {
  273  5                switch(pData[1])
  274  5                {
  275  6                  case FACTORS:     Protocol_SendDataMsg(pData,(uint8*)&MainSettings.correctionFactors[pData[3]],sizeof(
             -float));    break;
  276  6                  case DEADTIME:    Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mDeadTime,sizeof(MainSettings.mDead
             -Time));      break;
  277  6                  case EFFICIENCY:  Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mEfficiency,sizeof(MainSettings.mE
             -fficiency));  break;
  278  6                  case SENSIVITY:   Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mSensivity,sizeof(MainSettings.mSe
             -nsivity));    break;
  279  6                  case RANGE:       Protocol_SendDataMsg(pData,(uint8*)&MainSettings.rangeLimits,sizeof(MainSettings.rang
             -eLimits));  break;
  280  6                  
  281  6                }
  282  5              }break;
  283  4              
  284  4              
  285  4            }
  286  3          }break;
  287  2        }
  288  1      /*
  289  1        if(devID == 0)  //–ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ë–î
  290  1        {
  291  1          if(pData[0] == 0x01)
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 6   

  292  1          { 
  293  1            CAN_SendMessage(TX_CMD,mResetResponse,8);
  294  1          }
  295  1        }
  296  1        else if(devID == DEVICE_NUMBER) //–ø–æ–ª—É—á–∏–ª–∏ –º–µ—Å—Å–µ–¥–∂ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª–æ–∫–
             -∞
  297  1        {
  298  1          switch(pData[0])//–ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å –∫–æ–º–∞–Ω–¥—ã
  299  1          {
  300  1            case 0x04:  //–≤—ã–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä
  301  1            {
  302  1              switch(pData[1])
  303  1              {
  304  1              
  305  1                case FACTORS:
  306  1                {
  307  1                  if(pData[3]>=0 && pData[3] < FACTORS_COUNT)
  308  1                    Protocol_SendDataMsg((uint8*)&MainSettings.correctionFactors[pData[3]],pData,sizeof(float));
  309  1                }break;
  310  1                
  311  1                case DEADTIME:    Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mDeadTime,sizeof(MainSettings.mDead
             -Time));        break;
  312  1                case EFFICIENCY:  Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mEfficiency,sizeof(MainSettings.mEf
             -ficiency));    break;
  313  1                case SENSIVITY:   Protocol_SendDataMsg(pData,(uint8*)&MainSettings.mSensivity,sizeof(MainSettings.mSen
             -sivity));      break;
  314  1                case RANGE:       Protocol_SendDataMsg(pData,(uint8*)&MainSettings.rangeLimits,sizeof(MainSettings.range
             -Limits));    break;
  315  1                
  316  1                default: 
  317  1                {
  318  1                  pData[0] = 0xEE;
  319  1                  pData[2] = pData[1];
  320  1                  pData[1] = 0x04;
  321  1                  CAN_SendMessage(TX_ERROR,pData,3);
  322  1                }break;
  323  1                
  324  1              }
  325  1            }break;
  326  1            
  327  1            case 0x05:  //–∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä
  328  1            {
  329  1              switch(pData[1])
  330  1              {
  331  1                
  332  1      
  333  1                default: 
  334  1                {
  335  1                  pData[0] = 0xEE;
  336  1                  pData[2] = pData[1];
  337  1                  pData[1] = 0x05;
  338  1                    CAN_SendMessage(TX_ERROR,pData,3);
  339  1                }break; 
  340  1              }
  341  1              
  342  1              
  343  1            }break;
  344  1            
  345  1            case 0x40:  //—Å—Ç–∞—Ä—Ç –∏–∑–º–µ—Ä–µ–Ω–∏–π
  346  1            {
  347  1              Protocol_ResponseDataPackaje(E_ACCEPT_RESPONSE);
  348  1              Process_Start();
C166 COMPILER V7.53.0.0, PROTOCOL                                                          12/14/2017 14:31:18 PAGE 7   

  349  1              
  350  1              
  351  1            }break;
  352  1            
  353  1            case 0x41:  //—Å—Ç–æ–ø –∏–∑–º–µ—Ä–µ–Ω–∏–π
  354  1            {
  355  1              
  356  1              Protocol_ConfirmStopData();
  357  1              Process_Stop();
  358  1              //Protocol_ResponseDataPackaje(E_COMPLETED_RESPONSE);
  359  1              
  360  1              
  361  1            }break;
  362  1          }
  363  1        }
  364  1        else
  365  1        {
  366  1          
  367  1        }
  368  1      */
  369  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         950     --------
  NEAR-CONST SIZE  =          18     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           4     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =           6     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
